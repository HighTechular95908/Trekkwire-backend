{
    "openapi": "3.0.3",
    "info": {
        "title": "Swagger Petstore - OpenAPI 3.0",
        "description": "This is an API docs for [https://trekkwire.com](https://trekkwire.com)",
        "termsOfService": "https://trekkwire.com/",
        "contact": {
            "email": "pioneer95908@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.11"
    },
    "externalDocs": {
        "description": "Find out more about TrekkWire",
        "url": "http://TrekkWire.com/aboutus"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:3500/api"
        }
    ],
    "tags": [
        {
            "name": "user",
            "description": "Operations about user"
        }
    ],
    "paths": {
        "/user/register": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "description": "This can only be done by the logged in user.",
                "operationId": "createUser",
                "requestBody": {
                    "description": "Created user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "fullName": {
                                        "type": "string",
                                        "example": "James Smith"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "james@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "555-555-5555"
                                    }
                                },
                                "xml": {
                                    "name": "user"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {}
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "description": "This can only be done by the logged in user.",
                "operationId": "createUser",
                "requestBody": {
                    "description": "Created user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "james@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "xml": {
                                    "name": "user"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "J03jho303"
                                        },
                                        "user": {
                                            "type": "object",
                                            "example": {}
                                        }
                                    },
                                    "xml": {
                                        "name": "user"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {}
                    }
                }
            }
        },
        "/user/{userId}": {
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Get user by user name",
                "description": "",
                "operationId": "getUserByName",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "userId to be signed out",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example":"656f705e7ebdd568f45664a2"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Created user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "fullName": {
                                        "type": "string",
                                        "example": "James Smith"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "jamessmith@gmail.com"
                                    },
                                    "phone":{
                                        "type":"string",
                                        "example":"111-111-1115"
                                    }
                                },
                                "xml": {
                                    "name": "user"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {}
                }
            }
        },
        "/user/all": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user by user name",
                "description": "",
                "operationId": "getUserByName",
                "responses": {
                    "200": {}
                }
            }
        },
        "/user/password/{userId}": {
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Get user by user name",
                "description": "",
                "operationId": "getUserByName",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "userId to be signed out",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example":"656f705e7ebdd568f45664a2"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Created user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "password_cur":{
                                        "type":"string",
                                        "example":"aaaaaa"
                                    },
                                    "password_new":{
                                        "type":"string",
                                        "example":"123456"
                                    }
                                },
                                "xml": {
                                    "name": "user"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {}
                }
            }
        },
        "components": {
            "schemas": {
                "User": {
                    "required": [
                        "name",
                        "photoUrls"
                    ],
                    "type": "object",
                    "userId": {
                        "type": "integer",
                        "format": "int64",
                        "example": 10
                    },
                    "fullName": {
                        "type": "string",
                        "example": "John"
                    },
                    "photoUrl": {
                        "type": "string",
                        "example": "John"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@email.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "12345"
                    },
                    "userStatus": {
                        "type": "integer",
                        "description": "User Status",
                        "format": "int32",
                        "example": 1
                    }
                },
                "xml": {
                    "name": "user"
                }
            },
            "Tag": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "tag"
                }
            },
            "Pet": {
                "required": [
                    "name",
                    "photoUrls"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 10
                    },
                    "name": {
                        "type": "string",
                        "example": "doggie"
                    },
                    "category": {
                        "$ref": "#/components/schemas/Category"
                    },
                    "photoUrls": {
                        "type": "array",
                        "xml": {
                            "wrapped": true
                        },
                        "items": {
                            "type": "string",
                            "xml": {
                                "name": "photoUrl"
                            }
                        }
                    },
                    "tags": {
                        "type": "array",
                        "xml": {
                            "wrapped": true
                        },
                        "items": {
                            "$ref": "#/components/schemas/Tag"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "pet status in the store",
                        "enum": [
                            "available",
                            "pending",
                            "sold"
                        ]
                    }
                },
                "xml": {
                    "name": "pet"
                }
            },
            "ApiResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "##default"
                }
            }
        },
        "requestBodies": {
            "Pet": {
                "description": "Pet object that needs to be added to the store",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Pet"
                        }
                    },
                    "application/xml": {
                        "schema": {
                            "$ref": "#/components/schemas/Pet"
                        }
                    }
                }
            },
            "UserArray": {
                "description": "List of user object",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "petstore_auth": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
                        "scopes": {
                            "write:pets": "modify pets in your account",
                            "read:pets": "read your pets"
                        }
                    }
                }
            },
            "api_key": {
                "type": "apiKey",
                "name": "api_key",
                "in": "header"
            }
        }
    }
}